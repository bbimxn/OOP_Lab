import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Graphics;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

public class ColorChooserComboBox {
    public static void main(String[] args) {
        JFrame frame = new JFrame("Color Chooser");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(300, 200);

        String[] colorNames = {"Red", "Green", "Blue", "Yellow", "Black"};
        Color[] colors = {Color.RED, Color.GREEN, Color.BLUE, Color.YELLOW, Color.BLACK};

        JComboBox<String> colorComboBox = new JComboBox<>(colorNames);
        JPanel panel = new JPanel();

        // Custom renderer to show a small circle in front of the color name
        colorComboBox.setRenderer(new ListCellRenderer<String>() {
            @Override
            public Component getListCellRendererComponent(JList<? extends String> list, String value, int index, boolean isSelected, boolean cellHasFocus) {
                JLabel label = new JLabel(value) {
                    @Override
                    protected void paintComponent(Graphics g) {
                        super.paintComponent(g);
                        if (index >= 0 && index < colors.length) {
                            g.setColor(colors[index]);
                            g.fillOval(5, getHeight() / 2 - 5, 10, 10); // Draw the circle
                        }
                    }
                };
                label.setOpaque(true);

                if (isSelected) {
                    label.setBackground(Color.LIGHT_GRAY);
                } else {
                    label.setBackground(Color.WHITE);
                }

                label.setPreferredSize(new Dimension(100, 20));
                return label;
            }
        });

        colorComboBox.addActionListener(e -> {
            int selectedIndex = colorComboBox.getSelectedIndex();
            panel.setBackground(colors[selectedIndex]);
        });

        frame.add(colorComboBox, "North");
        frame.add(panel, "Center");

        frame.setVisible(true);
    }
}
